{"version":3,"sources":["components/AddRecipe.js","components/EditRecipe.js","components/ShowRecipes.js","components/HeaderTitle.js","components/Footer.js","data/base.js","components/RecipeBox.js","components/App.js","registerServiceWorker.js","index.js"],"names":["AddRecipe","props","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","show","size","setState","open","close","handleChange","e","_ref","name","value","defineProperty","handleSubmit","_this$state","state","description","error","newItem","assign","addRecipe","_this$state2","react_default","a","createElement","Button","fluid","color","onClick","Modal","centered","Header","Content","Form","onSubmit","Input","label","placeholder","onChange","Message","header","content","type","Component","EditRecipe","editItem","activeIndex","itemName","itemDescription","ShowRecipes","handleClick","titleProps","index","newIndex","removeItem","console","log","showEdit","bind","assertThisInitialized","_this2","items","recipes","map","item","key","Accordion","Title","active","Icon","Group","components_EditRecipe","HeaderTitle","Grid","Row","style","paddingBottom","Column","computer","className","Footer","target","href","config","apiKey","process","authDomain","databaseURL","projectId","REACT_APP_PROJECT_ID","storageBucket","messagingSenderId","app","firebase","initializeApp","base","Rebase","createClass","database","RecipeBox","concat","toConsumableArray","splice","recipies","recipesRef","syncState","context","removeBinding","components_HeaderTitle","paddingTop","minHeight","tablet","mobile","styled","marginTop","components_AddRecipe","length","components_ShowRecipes","components_Footer","App","components_RecipeBox","isLocalhost","Boolean","window","location","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","then","registration","onupdatefound","installingWorker","installing","onstatechange","controller","catch","ReactDOM","render","components_App","document","getElementById","URL","origin","addEventListener","fetch","response","status","headers","get","indexOf","ready","unregister","reload","checkValidServiceWorker","registerServiceWorker"],"mappings":"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","file":"static/js/main.ac843969.chunk.js","sourcesContent":["import React, { Component } from \"react\";\r\nimport { Modal, Button, Form, Message } from \"semantic-ui-react\";\r\n\r\nclass AddRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      name: \"\",\r\n      description: \"\",\r\n      error: false\r\n    };\r\n  }\r\n  //set the state of open to true and size of the modal to be small\r\n  show = size => () => this.setState({ size, open: true });\r\n  //set the state of open to false to close the modal\r\n  close = () => this.setState({ open: false });\r\n\r\n  //update the input/ state object when a user types\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n\r\n  //send the text entered into the\r\n  handleSubmit = () => {\r\n    const { name, description } = this.state;\r\n    //show the an error message if either name or description are left blank\r\n    if (name === \"\" || description === \"\") {\r\n      this.setState({\r\n        error: true\r\n      });\r\n    } else {\r\n      //create a new object containing the name and description\r\n      const newItem = Object.assign({ name, description });\r\n      //pass the new item to update the state of the recipes array\r\n      this.props.addRecipe(newItem);\r\n      //close the modal\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { open, size, name, description, error } = this.state;\r\n    return (\r\n      <div>\r\n        <Button fluid color=\"blue\" onClick={this.show(\"small\")}>\r\n          Add Recipe\r\n        </Button>\r\n        <Modal size={size} open={open} centered>\r\n          <Modal.Header>Add a Receipe</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit} error>\r\n              <Form.Input\r\n                fluid\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={name}\r\n                placeholder=\"Recipe Name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {error ? (\r\n                <Message\r\n                  error\r\n                  header=\"Error\"\r\n                  content=\"The name cannot be null\"\r\n                />\r\n              ) : null}\r\n              <Form.Input\r\n                fluid\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={description}\r\n                placeholder=\"Description\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {error ? (\r\n                <Message\r\n                  error\r\n                  header=\"Error\"\r\n                  content=\"The description cannot be null\"\r\n                />\r\n              ) : null}\r\n              <Form.Button content=\"Submit\" />\r\n              <Form.Button type=\"button\" onClick={this.close}>\r\n                Close\r\n              </Form.Button>\r\n            </Form>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default AddRecipe;\r\n","import React, { Component } from \"react\";\r\nimport { Button, Modal, Form, Message } from \"semantic-ui-react\";\r\n\r\nclass EditRecipe extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      open: false,\r\n      error: false,\r\n      name: this.props.itemName || \"\",\r\n      description: this.props.itemDescription || \"\"\r\n    };\r\n  }\r\n  //handle changing the state of the open property to show the Modal\r\n  show = size => () => this.setState({ size, open: true });\r\n\r\n  //handle changing the state of the open propert to close the Modal\r\n  close = () => this.setState({ open: false });\r\n\r\n  //handle changing the text in the input when a user types\r\n  handleChange = (e, { name, value }) => this.setState({ [name]: value });\r\n\r\n  handleSubmit = () => {\r\n    const { name, description } = this.state;\r\n    //handle the case where either name or description are blank\r\n    if (name === \"\" || description === \"\") {\r\n      this.setState({\r\n        error: true\r\n      });\r\n    } else {\r\n      //create an object containing the name and description\r\n      const newItem = Object.assign({ name, description });\r\n      //pass the object and active index so the item can be replaced\r\n      this.props.editItem(newItem, this.props.activeIndex);\r\n      //close the modal after a user clicks on the submit button\r\n      this.close();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { open, size, error } = this.state;\r\n    return (\r\n      <div>\r\n        <Button color=\"blue\" onClick={this.show(\"small\")}>\r\n          Edit Item\r\n        </Button>\r\n        <Modal size={size} open={open}>\r\n          <Modal.Header>Edit a Receipe</Modal.Header>\r\n          <Modal.Content>\r\n            <Form onSubmit={this.handleSubmit} error>\r\n              <Form.Input\r\n                fluid\r\n                label=\"Name\"\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                placeholder=\"Recipe Name\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {error ? (\r\n                <Message\r\n                  error\r\n                  header=\"Error\"\r\n                  content=\"The name cannot be null\"\r\n                />\r\n              ) : null}\r\n              <Form.Input\r\n                fluid\r\n                label=\"Description\"\r\n                name=\"description\"\r\n                value={this.state.description}\r\n                placeholder=\"Description\"\r\n                onChange={this.handleChange}\r\n              />\r\n              {error ? (\r\n                <Message\r\n                  error\r\n                  header=\"Error\"\r\n                  content=\"The description cannot be left blank.\"\r\n                />\r\n              ) : null}\r\n              <Form.Button content=\"Submit\" />\r\n              <Form.Button type=\"button\" onClick={this.close}>\r\n                Close\r\n              </Form.Button>\r\n            </Form>\r\n          </Modal.Content>\r\n        </Modal>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default EditRecipe;\r\n","import React, { Component } from \"react\";\r\nimport { Accordion, Icon, Button } from \"semantic-ui-react\";\r\nimport EditRecipe from \"./EditRecipe\";\r\n\r\nclass ShowRecipes extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      activeIndex: 0,\r\n      showEdit: false\r\n    };\r\n\r\n    this.handleClick = this.handleClick.bind(this);\r\n    this.removeItem = this.removeItem.bind(this);\r\n  }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  removeItem = () => {\r\n    console.log(this.state.activeIndex);\r\n    this.props.removeItem(this.state.activeIndex);\r\n  };\r\n\r\n  render() {\r\n    const { activeIndex } = this.state;\r\n    const items = this.props.recipes.map((item, index) => {\r\n      return (\r\n        <div key={index}>\r\n          <Accordion.Title\r\n            active={activeIndex === index}\r\n            index={index}\r\n            onClick={this.handleClick}\r\n          >\r\n            <Icon name=\"dropdown\" />\r\n            {item.name}\r\n          </Accordion.Title>\r\n          <Accordion.Content active={activeIndex === index}>\r\n            <p>{item.description}</p>\r\n            <Button.Group>\r\n              <EditRecipe\r\n                itemName={item.name}\r\n                itemDescription={item.description}\r\n                editItem={this.props.editItem}\r\n                activeIndex={this.state.activeIndex}\r\n              />\r\n              <Button onClick={this.removeItem} color=\"red\">\r\n                X\r\n              </Button>\r\n            </Button.Group>\r\n          </Accordion.Content>\r\n        </div>\r\n      );\r\n    });\r\n    return <div>{items}</div>;\r\n  }\r\n}\r\n\r\nexport default ShowRecipes;\r\n","import React from \"react\";\nimport { Grid } from \"semantic-ui-react\";\n\nconst HeaderTitle = () => {\n  return (\n    <Grid.Row style={{ paddingBottom: 0 }}>\n      <Grid.Column computer={16}>\n        <header className=\"headerContainer\">\n          <h1 className=\"headerTitle\">Recipe-Box</h1>\n          <h3 className=\"headerInfo\">\n            Add, Edit or Delete from the list of recipes below.\n          </h3>\n        </header>\n      </Grid.Column>\n    </Grid.Row>\n  );\n};\n\nexport default HeaderTitle;\n","import React from \"react\";\n\nconst Footer = () => {\n  return (\n    <footer className=\"footerContainer\">\n      <h2 className=\"footerInfo\">\n        Developed by{\" \"}\n        <a\n          className=\"footerAnchor\"\n          target=\"blank\"\n          href=\"https://github.com/haeke/\"\n        >\n          Edwin\n        </a>{\" \"}\n        | 2018\n      </h2>\n    </footer>\n  );\n};\n\nexport default Footer;\n","import Rebase from 're-base';\r\nimport firebase from 'firebase';\r\n\r\nvar config = {\r\n  apiKey: process.env.REACT_APP_FIREBASE_KEY,\r\n  authDomain: process.env.REACT_APP_FIREBASE_DOMAIN,\r\n  databaseURL: process.env.REACT_APP_FIREBASE_DATABASE,\r\n  projectId: process.env.REACT_APP_PROJECT_ID,\r\n  storageBucket: process.env.REACT_APP_FIREBASE_STORAGE_BUCKET,\r\n  messagingSenderId: process.env.REACT_APP_FIREBASE_SENDER_ID,\r\n};\r\n\r\nconst app = firebase.initializeApp(config);\r\nconst base = Rebase.createClass(app.database());\r\n\r\nexport default base;","import React, { Component } from \"react\";\r\nimport { Grid, Accordion } from \"semantic-ui-react\";\r\nimport AddRecipe from \"./AddRecipe\";\r\nimport ShowRecipes from \"./ShowRecipes\";\r\nimport HeaderTitle from \"./HeaderTitle\";\r\nimport Footer from \"./Footer\";\r\nimport base from \"../data/base\";\r\n\r\nclass RecipeBox extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      activeIndex: 0,\r\n      recipes: []\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    this.recipesRef = base.syncState(\"recipes\", {\r\n      context: this,\r\n      state: \"recipes\"\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    base.removeBinding(this.recipesRef);\r\n  }\r\n\r\n  handleClick = (e, titleProps) => {\r\n    const { index } = titleProps;\r\n    const { activeIndex } = this.state;\r\n    const newIndex = activeIndex === index ? -1 : index;\r\n\r\n    this.setState({ activeIndex: newIndex });\r\n  };\r\n\r\n  addRecipe = item => {\r\n    this.setState({\r\n      recipes: [...this.state.recipes, item]\r\n    });\r\n  };\r\n\r\n  removeItem = index => {\r\n    let { recipes } = this.state;\r\n    recipes.splice(index, 1);\r\n    this.setState({\r\n      recipes: this.state.recipes\r\n    });\r\n  };\r\n\r\n  editItem = (item, activeIndex) => {\r\n    let { recipes } = this.state;\r\n    this.setState({\r\n      recipies: (recipes[activeIndex] = item)\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <Grid centered computer={16}>\r\n        <HeaderTitle />\r\n        <Grid.Row style={{ paddingTop: 0, minHeight: \"100vh\" }}>\r\n          <Grid.Column computer={8} tablet={16} mobile={16}>\r\n            <Accordion fluid styled style={{ marginTop: \"15px\" }}>\r\n              <AddRecipe addRecipe={this.addRecipe} />\r\n              {this.state.recipes.length > 0 ? (\r\n                <ShowRecipes\r\n                  recipes={this.state.recipes}\r\n                  removeItem={this.removeItem}\r\n                  editItem={this.editItem}\r\n                  addRecipe={this.addRecipe}\r\n                />\r\n              ) : null}\r\n            </Accordion>\r\n          </Grid.Column>\r\n        </Grid.Row>\r\n        <Footer />\r\n      </Grid>\r\n    );\r\n  }\r\n}\r\n\r\nexport default RecipeBox;\r\n","import React, { Component } from 'react';\r\nimport RecipeBox from './RecipeBox';\r\nimport '../App.css';\r\n\r\nclass App extends Component {\r\n  render() {\r\n    return (\r\n      <div className=\"App\">\r\n        <RecipeBox />\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","// In production, we register a service worker to serve assets from local cache.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on the \"N+1\" visit to a page, since previously\r\n// cached resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model, read https://goo.gl/KwvDNy.\r\n// This link also includes instructions on opting out of this behavior.\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.1/8 is considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport default function register() {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebookincubator/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Lets check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://goo.gl/SC7cgQ'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not local host. Just register service worker\r\n        registerValidSW(swUrl);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the old content will have been purged and\r\n              // the fresh content will have been added to the cache.\r\n              // It's the perfect time to display a \"New content is\r\n              // available; please refresh.\" message in your web app.\r\n              console.log('New content is available; please refresh.');\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl)\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      if (\r\n        response.status === 404 ||\r\n        response.headers.get('content-type').indexOf('javascript') === -1\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready.then(registration => {\r\n      registration.unregister();\r\n    });\r\n  }\r\n}\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/App';\r\nimport registerServiceWorker from './registerServiceWorker';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\nregisterServiceWorker();\r\n"],"sourceRoot":""}